import{s as i,n as s}from"../chunks/scheduler.BvLojk_z.js";import{S as o,i as m,e as c,c as r,n as p,o as h,b,d as x}from"../chunks/index.3TFik1IB.js";function d(l){let t,a=`<div class="inline-block svelte-1nscopl"><a href="/projects" class="inline-block text-lg sm:text-xl mb-4 svelte-1nscopl">back</a></div> <h1 class="font-semibold text-2xl sm:text-4xl -mb-0.5">pycaptcha</h1> <h3 class="font-semibold text-lg sm:text-2xl mb-2 sm:mb-4 svelte-1nscopl"><a href="https://github.com/skarokin/pycaptcha" target="_blank" class="svelte-1nscopl">github</a></h3> <h5 class="text-base sm:text-xl mb-4 sm:mb-8">Python, NumPy, Pandas, Matplotlib, OpenCV, YOLOv4</h5> <p>A CAPTCHA system to generate tests using YOLOv4 object detection on
        Google Street View images.</p> <ul class="text-sm sm:text-base list-disc pl-4 sm:pl-8 mb-4 sm:mb-8"><li>Image augmentation pipeline with OpenCV, NumPy, and Matplotlib to
            generate training data.</li> <li>Trained YOLOv4 on 12 classes with 0.05 loss and 0.9 mAP from Google
            Open Images Dataset.</li> <li>NumPy and Pandas to process and filter images before test generation
            to ensure quality of tests.</li></ul>`;return{c(){t=c("main"),t.innerHTML=a,this.h()},l(e){t=r(e,"MAIN",{class:!0,"data-svelte-h":!0}),p(t)!=="svelte-1wwlk09"&&(t.innerHTML=a),this.h()},h(){h(t,"class","text-[var(--text-main)] flex flex-col justify-center min-h-screen pt-16 sm:pt-32 w-3/4 sm:w-1/2 mx-auto font-josefin-slab")},m(e,n){b(e,t,n)},p:s,i:s,o:s,d(e){e&&x(t)}}}class g extends o{constructor(t){super(),m(this,t,null,d,i,{})}}export{g as component};
